@using Resources;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
    <title>@ViewBag.Title</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/Content/bootstrap")
    @Styles.Render("~/Content/bootstrap-theme")
    @Styles.Render("~/Content/CustomCore.css")
</head>
<body>
    <div id="fb-root"></div>
    <header>
        <div class="content-wrapper">
            @if (User.Identity.IsAuthenticated)
            {
                <div>Logged In As </div> @Html.ActionLink(User.Identity.Name, "", "Profile", null, new { area = "User" });
                <div><a href="~/User/Login/Logout" onclick="FB.logout();">Logout</a> </div>
                
            }
            else
            {
                <div>@Html.ActionLink("Login", "", "Login", null, new { area = "User" })

                </div>
            }
        </div>
    </header>
    <div id="body">
        @RenderSection("featured", required: false)
        <section class="content-wrapper main-content clear-fix">
            @RenderBody()
        </section>
        <div id="loading">
        </div>

    </div>
    <footer>
        <div class="content-wrapper">
            <div class="float-left">
                <p>@*&copy; @DateTime.Now.Year Copyright*@</p>
            </div>
        </div>
    </footer>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/knockout-validation")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/Scripts/GlobalResources.js")
    @RenderSection("scripts", required: false)


</body>
</html>
<script>

    $(document).ready(function () {
        var apikey = '@(System.Configuration.ConfigurationManager.AppSettings["FacebookAPIKey"].ToString())'
        window.fbAsyncInit = function () {
            FB.init({
                appId: apikey,
                status: true, // check login status
                cookie: true, // enable cookies to allow the server to access the session
                xfbml: true  // parse XFBML
            });

            // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
            // for any authentication related change, such as login, logout or session refresh. This means that
            // whenever someone who was previously logged out tries to log in again, the correct case below 
            // will be handled. 
            FB.Event.subscribe('auth.authResponseChange', function (response) {
                // Here we specify what we do with the response anytime this event occurs. 
                if (response.status === 'connected') {
                    // The response object is returned with a status field that lets the app know the current
                    // login status of the person. In this case, we're handling the situation where they 
                    // have logged in to the app.
                    //testAPI();
                    //response.authResponse.signedRequest
                    //selfModel.loginWithFaceBook(response.authResponse.userID, response.authResponse.accessToken);
                } else if (response.status === 'not_authorized') {
                    // In this case, the person is logged into Facebook, but not into the app, so we call
                    // FB.login() to prompt them to do so. 
                    // In real-life usage, you wouldn't want to immediately prompt someone to login 
                    // like this, for two reasons:
                    // (1) JavaScript created popup windows are blocked by most browsers unless they 
                    // result from direct interaction from people using the app (such as a mouse click)
                    // (2) it is a bad experience to be continually prompted to login upon page load.
                    FB.login();
                } else {
                    // In this case, the person is not logged into Facebook, so we call the login() 
                    // function to prompt them to do so. Note that at this stage there is no indication
                    // of whether they are logged into the app. If they aren't then they'll see the Login
                    // dialog right after they log in to Facebook. 
                    // The same caveats as above apply to the FB.login() call here.
                    FB.login();
                }
            });
        };

    });

    // Load the SDK asynchronously
    (function (d) {
        var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement('script'); js.id = id; js.async = true;
        js.src = "//connect.facebook.net/en_US/all.js";
        ref.parentNode.insertBefore(js, ref);
    }(document));

</script>

